{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"StudentQuit\",\n\n  data() {\n    return {\n      search: '',\n      tableData: [],\n      total: 0,\n      credit: []\n    };\n  },\n\n  created() {\n    this.getCredit();\n    this.load();\n  },\n\n  methods: {\n    load() {\n      // 该页面需要展示的数据：classes表中，当前学生选过的课\n      request.get(\"/classes/forQuit\", {\n        params: {\n          // 后台查询所需数据在此做封装\n          studentId: sessionStorage.getItem(\"currentId\"),\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.list;\n        this.total = res.data.total;\n\n        for (let i = 0; i < this.tableData.length; i++) {\n          for (let j = 0; j < this.credit.length; j++) {\n            if (this.tableData[i].courseId == this.credit[j].id) {\n              this.tableData[i].credit = this.credit[j].credit;\n            }\n          }\n        }\n      });\n    },\n\n    quit(row) {\n      // // 退课本质是到grade表中删除相应数据,之后再更新界面就好\n      // // 先将待删除数据进行封装\n      // let forQuit = {\n      //   term: row.term,\n      //   courseId: row.courseId,\n      //   teacherId: row.teacherId,\n      //   studentId: sessionStorage.getItem(\"currentId\")\n      // }\n      // // 删除数据\n      // request.delete(\"/grade/\" + forQuit).then(res => {\n      //   console.log(res);\n      // })\n      // 上述方法出问题可能是由于前端封装时键值没有打双引号，后端SQL语句中字段名与数据库中不匹配，或是mapper中注解使用错误造成\n      // 之后写的方法能够出效果，懒得改了\n      // request类型为delete时，后端无法接受打包的数据，原因不明，看样子只能传单个数据给后端了\n      // 先获取当前row对应课程在grade的id，再根据该id去删除grade表中对应字段，采取该方式需要发起两次request请求\n      request.get(\"/grade/seekId\", {\n        params: {\n          term: row.term,\n          courseId: row.courseId,\n          teacherId: row.teacherId,\n          time: row.time,\n          studentId: sessionStorage.getItem(\"currentId\")\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.code !== '0') {\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          });\n          return;\n        } else {\n          // 删除grade表中对应元素\n          request.delete(\"/grade/\" + res.data).then(res2 => {\n            console.log(res2);\n\n            if (res2.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"退课成功\"\n              });\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              });\n            } // 更新界面\n\n\n            this.load();\n          });\n        }\n      });\n    },\n\n    getCredit() {\n      request.get(\"/course/getCredit\").then(res => {\n        console.log(res);\n        this.credit = res.data;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","name","data","search","tableData","total","credit","created","getCredit","load","methods","get","params","studentId","sessionStorage","getItem","then","res","console","log","list","i","length","j","courseId","id","quit","row","term","teacherId","time","code","$message","type","message","msg","delete","res2"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose\\vue\\src\\views\\StudentQuit.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px;\">\n\n    <div style=\"margin: 10px 0;\">\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 30%;\" clearable/>\n      <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"load\">查询</el-button>\n    </div>\n\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%;\">\n      <el-table-column prop=\"term\" label=\"学期\" sortable/>\n      <el-table-column prop=\"courseId\" label=\"课号\" sortable/>\n      <el-table-column prop=\"courseName\" label=\"课名\"/>\n      <el-table-column prop=\"credit\" label=\"学分\"/>\n      <el-table-column prop=\"teacherId\" label=\"教师号\" sortable/>\n      <el-table-column prop=\"teacherName\" label=\"教师名\"/>\n      <el-table-column prop=\"time\" label=\"时间\"/>\n\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\n        <template #default=\"scope\">\n          <el-popconfirm title=\"确定删选此课程吗？\" @confirm=\"quit(scope.row)\">\n            <template #reference>\n              <el-button type=\"danger\" plain size=\"small\">退课</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div style=\"margin: 10px 10px 10px; font-size: 10px; color: rgb(96, 98, 102);\">共 {{ total }} 条</div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"StudentQuit\",\n  data() {\n    return {\n      search: '',\n      tableData: [],\n      total: 0,\n      credit: []\n    }\n  },\n  created() {\n    this.getCredit();\n    this.load();\n  },\n  methods: {\n    load() {\n      // 该页面需要展示的数据：classes表中，当前学生选过的课\n      request.get(\"/classes/forQuit\", {\n        params: {\n          // 后台查询所需数据在此做封装\n          studentId: sessionStorage.getItem(\"currentId\"),\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.list;\n        this.total = res.data.total;\n        for (let i = 0; i < this.tableData.length; i++) {\n          for (let j = 0; j < this.credit.length; j++) {\n            if (this.tableData[i].courseId == this.credit[j].id) {\n              this.tableData[i].credit = this.credit[j].credit;\n            }\n          }\n        }\n      })\n    },\n    quit(row) {\n      // // 退课本质是到grade表中删除相应数据,之后再更新界面就好\n      // // 先将待删除数据进行封装\n      // let forQuit = {\n      //   term: row.term,\n      //   courseId: row.courseId,\n      //   teacherId: row.teacherId,\n      //   studentId: sessionStorage.getItem(\"currentId\")\n      // }\n      // // 删除数据\n      // request.delete(\"/grade/\" + forQuit).then(res => {\n      //   console.log(res);\n      // })\n\n      // 上述方法出问题可能是由于前端封装时键值没有打双引号，后端SQL语句中字段名与数据库中不匹配，或是mapper中注解使用错误造成\n      // 之后写的方法能够出效果，懒得改了\n\n      // request类型为delete时，后端无法接受打包的数据，原因不明，看样子只能传单个数据给后端了\n      // 先获取当前row对应课程在grade的id，再根据该id去删除grade表中对应字段，采取该方式需要发起两次request请求\n      request.get(\"/grade/seekId\", {\n        params: {\n          term: row.term,\n          courseId: row.courseId,\n          teacherId: row.teacherId,\n          time: row.time,\n          studentId: sessionStorage.getItem(\"currentId\")\n        }\n      }).then(res => {\n        console.log(res)\n        if (res.code !== '0') {\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          })\n          return;\n        } else {\n          // 删除grade表中对应元素\n          request.delete(\"/grade/\" + res.data).then(res2 => {\n            console.log(res2)\n            if (res2.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"退课成功\"\n              })\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              })\n            }\n            // 更新界面\n            this.load();\n          })\n        }\n      })\n    },\n    getCredit() {\n      request.get(\"/course/getCredit\").then(res => {\n        console.log(res);\n        this.credit = res.data;\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}