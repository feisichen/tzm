{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"StudentChoose\",\n\n  created() {\n    this.getCredit();\n    this.load();\n  },\n\n  data() {\n    return {\n      search: '',\n      tableData: [],\n      total: 0,\n      credit: []\n    };\n  },\n\n  methods: {\n    load() {\n      request.get(\"/classes/forStudent\", {\n        params: {\n          search: this.search,\n          dep: sessionStorage.getItem(\"currentDep\")\n        }\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.total = res.data.total;\n\n        for (let i = 0; i < this.tableData.length; i++) {\n          for (let j = 0; j < this.credit.length; j++) {\n            if (this.tableData[i].courseId == this.credit[j].id) {\n              this.tableData[i].credit = this.credit[j].credit;\n            }\n          }\n        }\n      });\n    },\n\n    // 原计划是“判断当前row中的课程是否已选修”单独作为一个方法，但函数嵌套时被调用函数的返回值无法正常传递给调用者，原因不明\n    choose(row) {\n      // 选课之前需要先判断本门课程是否已选过\n      // 有五个东西需要传到后台进行验证，学号，学期，课号，工号，时间，对它们进行封装\n      let chooseObj = {\n        \"studentId\": sessionStorage.getItem(\"currentId\"),\n        \"term\": row.term,\n        \"courseId\": row.courseId,\n        \"teacherId\": row.teacherId,\n        \"time\": row.time\n      }; // 去grade表中进行查询\n\n      request.post(\"/grade/isChosen\", chooseObj).then(res => {\n        console.log(res);\n\n        if (res.code !== '0') {\n          // 不能选课\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          });\n          return;\n        } else {\n          // 创建一条grade实体（id不传，自动生成），插入到grade表中\n          let gradeObj = {\n            \"studentId\": sessionStorage.getItem(\"currentId\"),\n            \"term\": row.term,\n            \"courseId\": row.courseId,\n            \"teacherId\": row.teacherId,\n            \"time\": row.time,\n            \"usualGrade\": '0',\n            \"finalGrade\": '0',\n            \"totalGrade\": '0'\n          };\n          request.post(\"/grade\", gradeObj).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"选课成功\"\n              });\n              this.load();\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              });\n            }\n          });\n        }\n      });\n    },\n\n    getCredit() {\n      request.get(\"/course/getCredit\").then(res => {\n        console.log(res);\n        this.credit = res.data;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","name","created","getCredit","load","data","search","tableData","total","credit","methods","get","params","dep","sessionStorage","getItem","then","res","list","i","length","j","courseId","id","choose","row","chooseObj","term","teacherId","time","post","console","log","code","$message","type","message","msg","gradeObj"],"sourceRoot":"","sources":["C:\\Users\\z1871\\Desktop\\tzm\\vue\\src\\views\\StudentChoose.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px;\">\r\n\r\n    <div style=\"margin: 10px 0;\">\r\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 30%;\" clearable/>\r\n      <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"load\">查询</el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%;\">\r\n      <el-table-column prop=\"term\" label=\"学期\" sortable/>\r\n      <el-table-column prop=\"courseId\" label=\"课号\" sortable/>\r\n      <el-table-column prop=\"courseName\" label=\"课名\"/>\r\n      <el-table-column prop=\"credit\" label=\"学分\"/>\r\n      <el-table-column prop=\"teacherId\" label=\"教师号\" sortable/>\r\n      <el-table-column prop=\"teacherName\" label=\"教师名\"/>\r\n      <el-table-column prop=\"time\" label=\"时间\"/>\r\n      <el-table-column prop=\"currentNum\" label=\" 当前人数\"/>\r\n      <el-table-column prop=\"limitNum\" label=\"人数上限\"/>\r\n\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-popconfirm title=\"确定选择此课程吗？\" @confirm=\"choose(scope.row)\">\r\n            <template #reference>\r\n              <el-button type=\"primary\" plain size=\"small\">选课</el-button>\r\n            </template>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"margin: 10px 10px 10px; font-size: 10px; color: rgb(96, 98, 102);\">共 {{ total }} 条</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"StudentChoose\",\r\n  created() {\r\n    this.getCredit();\r\n    this.load();\r\n  },\r\n  data() {\r\n    return {\r\n      search: '',\r\n      tableData: [],\r\n      total: 0,\r\n      credit: []\r\n    }\r\n  },\r\n  methods: {\r\n    load() {\r\n      request.get(\"/classes/forStudent\", {\r\n        params: {\r\n          search: this.search,\r\n          dep: sessionStorage.getItem(\"currentDep\")\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data.list;\r\n        this.total = res.data.total;\r\n        for (let i = 0; i < this.tableData.length; i++) {\r\n          for (let j = 0; j < this.credit.length; j++) {\r\n            if (this.tableData[i].courseId == this.credit[j].id) {\r\n              this.tableData[i].credit = this.credit[j].credit;\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    // 原计划是“判断当前row中的课程是否已选修”单独作为一个方法，但函数嵌套时被调用函数的返回值无法正常传递给调用者，原因不明\r\n    choose(row) {\r\n      // 选课之前需要先判断本门课程是否已选过\r\n      // 有五个东西需要传到后台进行验证，学号，学期，课号，工号，时间，对它们进行封装\r\n      let chooseObj = {\r\n        \"studentId\": sessionStorage.getItem(\"currentId\"),\r\n        \"term\": row.term,\r\n        \"courseId\": row.courseId,\r\n        \"teacherId\": row.teacherId,\r\n        \"time\": row.time\r\n      }\r\n      // 去grade表中进行查询\r\n      request.post(\"/grade/isChosen\", chooseObj).then(res => {\r\n        console.log(res);\r\n        if (res.code !== '0') { // 不能选课\r\n          this.$message({\r\n            type: \"warning\",\r\n            message: res.msg\r\n          })\r\n          return;\r\n        } else {\r\n          // 创建一条grade实体（id不传，自动生成），插入到grade表中\r\n          let gradeObj = {\r\n            \"studentId\": sessionStorage.getItem(\"currentId\"),\r\n            \"term\": row.term,\r\n            \"courseId\": row.courseId,\r\n            \"teacherId\": row.teacherId,\r\n            \"time\": row.time,\r\n            \"usualGrade\": '0',\r\n            \"finalGrade\": '0',\r\n            \"totalGrade\": '0'\r\n          }\r\n          request.post(\"/grade\", gradeObj).then(res => {\r\n            if (res.code === '0') {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"选课成功\"\r\n              })\r\n              this.load();\r\n            } else {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: res.msg\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    getCredit() {\r\n      request.get(\"/course/getCredit\").then(res => {\r\n        console.log(res);\r\n        this.credit = res.data;\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}