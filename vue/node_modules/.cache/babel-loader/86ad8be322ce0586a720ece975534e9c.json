{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"10px 0\"\n  }\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"查询\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"选课\");\n\nconst _hoisted_5 = {\n  style: {\n    \"margin\": \"10px 10px 10px\",\n    \"font-size\": \"10px\",\n    \"color\": \"rgb(96, 98, 102)\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    modelValue: $data.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    placeholder: \"请输入关键字\",\n    style: {\n      \"width\": \"30%\"\n    },\n    clearable: \"\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    style: {\n      \"margin-left\": \"5px\"\n    },\n    onClick: $options.load\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])]), _createVNode(_component_el_table, {\n    data: $data.tableData,\n    border: \"\",\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"term\",\n      label: \"学期\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"courseId\",\n      label: \"课号\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"courseName\",\n      label: \"课名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"credit\",\n      label: \"学分\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherId\",\n      label: \"教师号\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherName\",\n      label: \"教师名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"time\",\n      label: \"时间\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"currentNum\",\n      label: \" 当前人数\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"limitNum\",\n      label: \"人数上限\"\n    }), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_popconfirm, {\n        title: \"确定选择此课程吗？\",\n        onConfirm: $event => $options.choose(scope.row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          plain: \"\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onConfirm\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"]), _createElementVNode(\"div\", _hoisted_5, \"共 \" + _toDisplayString($data.total) + \" 条\", 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":"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","names":["style","_createElementBlock","_createElementVNode","_createVNode","_component_el_input","$data","$event","placeholder","clearable","_component_el_button","type","onClick","$options","_component_el_table","data","border","stripe","_component_el_table_column","prop","label","sortable","fixed","width","default","scope","_component_el_popconfirm","title","onConfirm","row","reference","plain","size","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\z1871\\Desktop\\tzm\\vue\\src\\views\\StudentChoose.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px;\">\r\n\r\n    <div style=\"margin: 10px 0;\">\r\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 30%;\" clearable/>\r\n      <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"load\">查询</el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%;\">\r\n      <el-table-column prop=\"term\" label=\"学期\" sortable/>\r\n      <el-table-column prop=\"courseId\" label=\"课号\" sortable/>\r\n      <el-table-column prop=\"courseName\" label=\"课名\"/>\r\n      <el-table-column prop=\"credit\" label=\"学分\"/>\r\n      <el-table-column prop=\"teacherId\" label=\"教师号\" sortable/>\r\n      <el-table-column prop=\"teacherName\" label=\"教师名\"/>\r\n      <el-table-column prop=\"time\" label=\"时间\"/>\r\n      <el-table-column prop=\"currentNum\" label=\" 当前人数\"/>\r\n      <el-table-column prop=\"limitNum\" label=\"人数上限\"/>\r\n\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-popconfirm title=\"确定选择此课程吗？\" @confirm=\"choose(scope.row)\">\r\n            <template #reference>\r\n              <el-button type=\"primary\" plain size=\"small\">选课</el-button>\r\n            </template>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"margin: 10px 10px 10px; font-size: 10px; color: rgb(96, 98, 102);\">共 {{ total }} 条</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"StudentChoose\",\r\n  created() {\r\n    this.getCredit();\r\n    this.load();\r\n  },\r\n  data() {\r\n    return {\r\n      search: '',\r\n      tableData: [],\r\n      total: 0,\r\n      credit: []\r\n    }\r\n  },\r\n  methods: {\r\n    load() {\r\n      request.get(\"/classes/forStudent\", {\r\n        params: {\r\n          search: this.search,\r\n          dep: sessionStorage.getItem(\"currentDep\")\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data.list;\r\n        this.total = res.data.total;\r\n        for (let i = 0; i < this.tableData.length; i++) {\r\n          for (let j = 0; j < this.credit.length; j++) {\r\n            if (this.tableData[i].courseId == this.credit[j].id) {\r\n              this.tableData[i].credit = this.credit[j].credit;\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    // 原计划是“判断当前row中的课程是否已选修”单独作为一个方法，但函数嵌套时被调用函数的返回值无法正常传递给调用者，原因不明\r\n    choose(row) {\r\n      // 选课之前需要先判断本门课程是否已选过\r\n      // 有五个东西需要传到后台进行验证，学号，学期，课号，工号，时间，对它们进行封装\r\n      let chooseObj = {\r\n        \"studentId\": sessionStorage.getItem(\"currentId\"),\r\n        \"term\": row.term,\r\n        \"courseId\": row.courseId,\r\n        \"teacherId\": row.teacherId,\r\n        \"time\": row.time\r\n      }\r\n      // 去grade表中进行查询\r\n      request.post(\"/grade/isChosen\", chooseObj).then(res => {\r\n        console.log(res);\r\n        if (res.code !== '0') { // 不能选课\r\n          this.$message({\r\n            type: \"warning\",\r\n            message: res.msg\r\n          })\r\n          return;\r\n        } else {\r\n          // 创建一条grade实体（id不传，自动生成），插入到grade表中\r\n          let gradeObj = {\r\n            \"studentId\": sessionStorage.getItem(\"currentId\"),\r\n            \"term\": row.term,\r\n            \"courseId\": row.courseId,\r\n            \"teacherId\": row.teacherId,\r\n            \"time\": row.time,\r\n            \"usualGrade\": '0',\r\n            \"finalGrade\": '0',\r\n            \"totalGrade\": '0'\r\n          }\r\n          request.post(\"/grade\", gradeObj).then(res => {\r\n            if (res.code === '0') {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"选课成功\"\r\n              })\r\n              this.load();\r\n            } else {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: res.msg\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    getCredit() {\r\n      request.get(\"/course/getCredit\").then(res => {\r\n        console.log(res);\r\n        this.credit = res.data;\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}