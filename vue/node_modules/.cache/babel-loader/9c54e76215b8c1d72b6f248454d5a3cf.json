{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"10px 0\"\n  }\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"查询\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"退课\");\n\nconst _hoisted_5 = {\n  style: {\n    \"margin\": \"10px 10px 10px\",\n    \"font-size\": \"10px\",\n    \"color\": \"rgb(96, 98, 102)\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    modelValue: $data.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    placeholder: \"请输入关键字\",\n    style: {\n      \"width\": \"30%\"\n    },\n    clearable: \"\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    style: {\n      \"margin-left\": \"5px\"\n    },\n    onClick: $options.load\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])]), _createVNode(_component_el_table, {\n    data: $data.tableData,\n    border: \"\",\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"term\",\n      label: \"学期\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"courseId\",\n      label: \"课号\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"courseName\",\n      label: \"课名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"credit\",\n      label: \"学分\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherId\",\n      label: \"教师号\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherName\",\n      label: \"教师名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"time\",\n      label: \"时间\"\n    }), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_popconfirm, {\n        title: \"确定删选此课程吗？\",\n        onConfirm: $event => $options.quit(scope.row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"danger\",\n          plain: \"\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onConfirm\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"]), _createElementVNode(\"div\", _hoisted_5, \"共 \" + _toDisplayString($data.total) + \" 条\", 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;AACOA,OAAsB,EAAtB;AAAA;AAAA;;;AAEEA,OAAuB,EAAvB;AAAA;AAAA;;;iDAE+D;;iDAgBd;;;AAMjDA,OAAyE,EAAzE;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;uBA1BPC,oBA2BM,KA3BN,cA2BM,CAzBJC,oBAGM,KAHN,cAGM,CAFJC,aAA+EC,mBAA/E,EAA+E;gBAA5DC,YAA4D;+DAA5DA,eAAMC,OAAsD;AAApDC,eAAW,EAAC,QAAwC;AAA/BP,SAAmB,EAAnB;AAAA;AAAA,KAA+B;AAAXQ,aAAS,EAAT;AAAW,GAA/E;;AAAA,mBAEI,EADJL,aAAgFM,oBAAhF,EAAgF;AAArEC,QAAI,EAAC,SAAgE;AAAtDV,SAAyB,EAAzB;AAAA;AAAA,KAAsD;AAA3BW,WAAK,EAAEC;AAAoB,GAAhF;sBAAkE,MAAE;;;;GAApE;;AAAA,gBACI,CAHN,CAyBI,EApBJT,aAkBWU,mBAlBX,EAkBW;AAlBAC,QAAI,EAAET,eAkBN;AAlBiBU,UAAM,EAAN,EAkBjB;AAlBwBC,UAAM,EAAN,EAkBxB;AAlB+BhB,SAAoB,EAApB;AAAA;AAAA;AAkB/B,GAlBX;sBACE,MAAkD,CAAlDG,aAAkDc,0BAAlD,EAAkD;AAAjCC,UAAI,EAAC,MAA4B;AAArBC,WAAK,EAAC,IAAe;AAAVC,cAAQ,EAAR;AAAU,KAAlD,CAAkD,EAClDjB,aAAsDc,0BAAtD,EAAsD;AAArCC,UAAI,EAAC,UAAgC;AAArBC,WAAK,EAAC,IAAe;AAAVC,cAAQ,EAAR;AAAU,KAAtD,CADkD,EAElDjB,aAA+Cc,0BAA/C,EAA+C;AAA9BC,UAAI,EAAC,YAAyB;AAAZC,WAAK,EAAC;AAAM,KAA/C,CAFkD,EAGlDhB,aAA2Cc,0BAA3C,EAA2C;AAA1BC,UAAI,EAAC,QAAqB;AAAZC,WAAK,EAAC;AAAM,KAA3C,CAHkD,EAIlDhB,aAAwDc,0BAAxD,EAAwD;AAAvCC,UAAI,EAAC,WAAkC;AAAtBC,WAAK,EAAC,KAAgB;AAAVC,cAAQ,EAAR;AAAU,KAAxD,CAJkD,EAKlDjB,aAAiDc,0BAAjD,EAAiD;AAAhCC,UAAI,EAAC,aAA2B;AAAbC,WAAK,EAAC;AAAO,KAAjD,CALkD,EAMlDhB,aAAyCc,0BAAzC,EAAyC;AAAxBC,UAAI,EAAC,MAAmB;AAAZC,WAAK,EAAC;AAAM,KAAzC,CANkD,EAQlDhB,aAQkBc,0BARlB,EAQkB;AARDI,WAAK,EAAC,OAQL;AARaF,WAAK,EAAC,IAQnB;AARwBG,WAAK,EAAC;AAQ9B,KARlB;AACaC,aAAO,WAAEC,KAClB,IADuB,CACvBrB,aAIgBsB,wBAJhB,EAIgB;AAJDC,aAAK,EAAC,WAIL;AAJkBC,iBAAO,YAAEf,cAAKY,KAAK,CAACI,GAAX;AAI3B,OAJhB;AACaC,iBAAS,WAClB,MAA0D,CAA1D1B,aAA0DM,oBAA1D,EAA0D;AAA/CC,cAAI,EAAC,QAA0C;AAAjCoB,eAAK,EAAL,EAAiC;AAA3BC,cAAI,EAAC;AAAsB,SAA1D;4BAA4C,MAAE;;;;SAA9C,CAA0D,CADxC;;;;OADtB;;AAAA,sBADuB,CAAP;;;;KADpB,CARkD;;;;GADpD;;AAAA,aAoBI,EADJ7B,oBAAoG,KAApG,cAA+E,OAAE8B,iBAAG3B,WAAH,CAAF,GAAa,IAA5F,EAA8F;AAAA;AAA9F,GACI,CA3BN","names":["style","_createElementBlock","_createElementVNode","_createVNode","_component_el_input","$data","$event","placeholder","clearable","_component_el_button","type","onClick","$options","_component_el_table","data","border","stripe","_component_el_table_column","prop","label","sortable","fixed","width","default","scope","_component_el_popconfirm","title","onConfirm","row","reference","plain","size","_toDisplayString"],"sourceRoot":"","sources":["E:\\code\\springboot+vue\\class_choose\\vue\\src\\views\\StudentQuit.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px;\">\n\n    <div style=\"margin: 10px 0;\">\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 30%;\" clearable/>\n      <el-button type=\"primary\" style=\"margin-left: 5px;\" @click=\"load\">查询</el-button>\n    </div>\n\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%;\">\n      <el-table-column prop=\"term\" label=\"学期\" sortable/>\n      <el-table-column prop=\"courseId\" label=\"课号\" sortable/>\n      <el-table-column prop=\"courseName\" label=\"课名\"/>\n      <el-table-column prop=\"credit\" label=\"学分\"/>\n      <el-table-column prop=\"teacherId\" label=\"教师号\" sortable/>\n      <el-table-column prop=\"teacherName\" label=\"教师名\"/>\n      <el-table-column prop=\"time\" label=\"时间\"/>\n\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\n        <template #default=\"scope\">\n          <el-popconfirm title=\"确定删选此课程吗？\" @confirm=\"quit(scope.row)\">\n            <template #reference>\n              <el-button type=\"danger\" plain size=\"small\">退课</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div style=\"margin: 10px 10px 10px; font-size: 10px; color: rgb(96, 98, 102);\">共 {{ total }} 条</div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"StudentQuit\",\n  data() {\n    return {\n      search: '',\n      tableData: [],\n      total: 0,\n      credit: []\n    }\n  },\n  created() {\n    this.getCredit();\n    this.load();\n  },\n  methods: {\n    load() {\n      // 该页面需要展示的数据：classes表中，当前学生选过的课\n      request.get(\"/classes/forQuit\", {\n        params: {\n          // 后台查询所需数据在此做封装\n          studentId: sessionStorage.getItem(\"currentId\"),\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.list;\n        this.total = res.data.total;\n        for (let i = 0; i < this.tableData.length; i++) {\n          for (let j = 0; j < this.credit.length; j++) {\n            if (this.tableData[i].courseId == this.credit[j].id) {\n              this.tableData[i].credit = this.credit[j].credit;\n            }\n          }\n        }\n      })\n    },\n    quit(row) {\n      // // 退课本质是到grade表中删除相应数据,之后再更新界面就好\n      // // 先将待删除数据进行封装\n      // let forQuit = {\n      //   term: row.term,\n      //   courseId: row.courseId,\n      //   teacherId: row.teacherId,\n      //   studentId: sessionStorage.getItem(\"currentId\")\n      // }\n      // // 删除数据\n      // request.delete(\"/grade/\" + forQuit).then(res => {\n      //   console.log(res);\n      // })\n\n      // 上述方法出问题可能是由于前端封装时键值没有打双引号，后端SQL语句中字段名与数据库中不匹配，或是mapper中注解使用错误造成\n      // 之后写的方法能够出效果，懒得改了\n\n      // request类型为delete时，后端无法接受打包的数据，原因不明，看样子只能传单个数据给后端了\n      // 先获取当前row对应课程在grade的id，再根据该id去删除grade表中对应字段，采取该方式需要发起两次request请求\n      request.get(\"/grade/seekId\", {\n        params: {\n          term: row.term,\n          courseId: row.courseId,\n          teacherId: row.teacherId,\n          time: row.time,\n          studentId: sessionStorage.getItem(\"currentId\")\n        }\n      }).then(res => {\n        console.log(res)\n        if (res.code !== '0') {\n          this.$message({\n            type: \"warning\",\n            message: res.msg\n          })\n          return;\n        } else {\n          // 删除grade表中对应元素\n          request.delete(\"/grade/\" + res.data).then(res2 => {\n            console.log(res2)\n            if (res2.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"退课成功\"\n              })\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              })\n            }\n            // 更新界面\n            this.load();\n          })\n        }\n      })\n    },\n    getCredit() {\n      request.get(\"/course/getCredit\").then(res => {\n        console.log(res);\n        this.credit = res.data;\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}